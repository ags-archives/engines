//===================================================================
// *** AGS ROOM SCRIPT ***
//
// Project: Demo Quest 3 
//          Source of Dreams
//
// Room:    Trash Can Street
//              
// Author:  Allan Menefe (Holister_Man)
//          Rick Jafrate (RickJ)    
//
// Abstract
// This is the first room of the game. Interactions such as "Look At"
// and "Interact  With" that only result in the display of a  message
// have  been  programed  with the Interaction Editor.  The remaining 
// interactions have  been programed, here  in the Room Script. 
//
// Description
// In this rooms there are two trash cans, a mouse hole, a wallet and
// a key  on  the roadway. The player takes a piece of trash from the 
// trash cans and takes money from the wallet.  Interacting with  the
// mouse  hole gets the player's finger bitten. A pink poster aquired
// elsewhere may be used on the hole to satisfy the mouse. The key is
// unreachable from the sidewalk and the player is unable to step off
// the curb.  So  the player must enter another room to get onto  the 
// roadway.  The  player may then walk along the roadway back to this 
// room to retrieve the key.
//
// Scripting Hint - Interaction Functions 
// Since the script in this room is  not very large or complicated it 
// has been done inside the interaction functions created and managed 
// by the Interaction Editor.These functions are distinguished by the 
// #sectionstart and #sectionend directives.  
//
// In cases where more lengthly and/or complicated script is required
// it is  often  convenient  to create custom functions and call them 
// from the interaction functions as the  AGS  built-in functions are
// called in this room's script.  
//
// Scripting Hint - Pick-up Objects and Add to Inventory
// The basic procedure for picking up an object and  adding it to the
// player character's inventory is as follows:
//
//    o Walk to the room object            
//    o Remove the object from the screen  
//    o Add the correcponding inventory item to the player's inventory
//    o Award points
//
// There are of course variations such as requiring that the player
// character be in the vicinity of the object or interacting with a
// hotspot rather than a room object to acquire inventory items.
//
// Revision History
// 05-Mar-15 RickJ,        update for AGS 2.7
// 04-Dec-01 Holister_Man, original version derrived from DQI & DQII
// 
// Copyright (c) 2005 by Chris Jones
//-------------------------------------------------------------------


//===================================================================
// Constant Definitions
//-------------------------------------------------------------------


//===================================================================
// Static Variable Definitions
//-------------------------------------------------------------------


//===================================================================
// Utility Functions
//-------------------------------------------------------------------


//===================================================================
// Application Functions
//-------------------------------------------------------------------


//===================================================================
// Room - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart room_b  // DO NOT EDIT OR REMOVE THIS LINE
function room_b() {
	// script for room: Player enters screen (before fadein)

	//----------------------------------------------------------------
	// Putting Text into the Help GUI
	//
	// The following  code  populates  the help GUI with deatils about
	// this room.  The  help  title contais the name of the room.  The 
	// room number is automatically  obtined in  the  global script so
	// it's not necessary to do anything here.  The  description lists
	// the  types of things demonstarted in this room.  The  reference
	// section contain  a list of keywords that may be searched for in 
	// the AGS manual. 
	//----------------------------------------------------------------
	gHelpTitle.Text = "Trash Can Street";
	gHelpDescription.Text = "Giving the player inventory items, both from hotspot (trash) and object (key). And how to pick up quantities of things (money).";
	gHelpReference.Text = "Manual Reference: [inventory, hotspotsm objects";
}
#sectionend room_b  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Key - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart object0_a  // DO NOT EDIT OR REMOVE THIS LINE
function object0_a() {
	// script for object0: INTERACT WITH OBJECT

	//----------------------------------------------------------------
	// The  code  below  shows  how  to pickup an object and add it to 
	// the player's inventory.  In the background  image  the  curb is
	// located at about y=120. So if the player character's y-position 
	// is  less than 120 it is on the sidewalk and unable to reach the
	// key which is located on the roadway. 
	//----------------------------------------------------------------
	if (player.y<120) {							// Player is on sidewalk
		Display("You can't reach it from up here. You'll have to find a way down the curb.");
	}
	else {
		player.Walk(oKey.X, oKey.Y, eBlock);// Make player walk to object
		GiveScore (2);								// Award some points
		oKey.Visible = false; 					// Take key object from the screen
		player.AddInventory(iKey);				// Add key to the inventory
		dMeetBman.SetOptionState(3, eOptionOff);
		dMeetBman.SetOptionState(4, eOptionOn);
	}
}
#sectionend object0_a  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Trash - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart hotspot2_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot2_a() {
	// script for hotspot2: INTERACT WITH HOTSPOT

	//----------------------------------------------------------------
	// The  code  below  shows  how  to pickup an object and add it to 
	// the player's inventory.  In the background  image  the  curb is
	// located at about y=120. So if the player character's y-position 
	// is greater than 120 it's on the roadway and unable to reach the
	// trash cans which are located on the sidewalk.
	//----------------------------------------------------------------
	if (player.y>120) {							// Player is on the roadway
		Display("You can't reach the trash cans from here - you'll have to go back round.");
	}
	else {											// Only get trash once
		if (player.InventoryQuantity[iTrash.ID]>0) { 
			Display("I think you've had enough of going through trash for one day.");
		} 
		else {										// Ok, this is the first time so ...
			player.AddInventory(iTrash); 		// Add trash to the inventory
			Display("Holding your nose, you reach into the trash can and pull out some trash.");
			GiveScore(2);							// Award some points
			aTrashCan.Play();
		}
	}
}
#sectionend hotspot2_a  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Wallet - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart object1_a  // DO NOT EDIT OR REMOVE THIS LINE
function object1_a() {
	// script for object1: INTERACT WITH OBJECT
	if (player.y>120) {
		Display("You can't reach it from here, you'll have to go back around.");
	}
	else {
		player.Walk(oSomething.X, oSomething.Y, eBlock);
		Display("You pick up the object and discover that it's a wallet.");
		Display("Inside you find 10 coins, which you take.");

		//-------------------------------------------------------------
		// The  character's  inventory  uses an integer number to store
		// how many of the  inventory items the  character has. This is 
		// an ideal way to handle money.
		//-------------------------------------------------------------
		player.InventoryQuantity[iMoney.ID]+=10;	// Add 10 units to the money inventory
		GiveScore(3);										// Award points
		oSomething.Visible = false;					// Remove object from screen
	}
}
#sectionend object1_a  // DO NOT EDIT OR REMOVE THIS LINE


function room_LeaveLeft()
{
player.ChangeRoomAutoPosition(11);
}

function room_LeaveRight()
{
player.ChangeRoomAutoPosition(10);
}

function hSign_Look()
{
DisplayMessage(0);
}

function hSign_Interact()
{
DisplayMessage(11);
}

function hTrashCans_Look()
{
DisplayMessage(1);
}

function hHole_Look()
{
aSquirrelMonkey.Play();
DisplayMessage(2);
}

function hHole_Interact()
{
aSquirrelMonkey.Play();
DisplayMessage(10);
}

function hHole_UseInv()
{
if (player.ActiveInventory == inventory[2]) {
if (Game.DoOnceOnly("fd83fae7-be97-4edd-8f4a-5aa2cee12f54")) {
  GiveScore(-2);
}
player.LoseInventory(inventory[2]);
aSquirrelMonkey.Play();
DisplayMessage(7);
}
}

function hWall_Look()
{
DisplayMessage(3);
}

function hRoad_Look()
{
DisplayMessage(8);
}

function hSidewalk_Look()
{
DisplayMessage(9);
}

function oKey_Look()
{
DisplayMessage(5);
}

function oSomething_Look()
{
DisplayMessage(12);
}
