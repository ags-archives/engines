<HTML>
<head><title>Text display / Speech functions</title><style type="text/css">
<!--
body         { font-family: Verdana; font-size: 10pt }
td           { font-family: Verdana; font-size: 10pt }
a            { font-weight: bold }
-->
</style>
</head>

<BODY BGCOLOR=#FFFFE1 TEXT=#000000>
<A NAME="topic71"></A><CENTER>
<A HREF="ags.htm"><img align=center src="contents.gif" BORDER=0 ALT="Contents"></A> <A HREF="ags28.htm#topic38"><img align=center src="up.gif" BORDER=0 ALT="Up"></A> <A HREF="ags78.htm#topic70"><img align=center src="back.gif" BORDER=0 ALT="Previous"></A> <A HREF="ags80.htm#topic72"><img align=center src="forward.gif" BORDER=0 ALT="Next"></A> </CENTER><HR>

<H2>Text display / Speech functions</H2>
<A HREF="#Display">Display</A><BR>
<A HREF="#DisplayAt">DisplayAt</A><BR>
<A HREF="#DisplayAtY">DisplayAtY</A><BR>
<A HREF="#DisplayMessage">DisplayMessage</A><BR>
<A HREF="#DisplayMessageAtY">DisplayMessageAtY</A><BR>
<A HREF="#DisplayTopBar">DisplayTopBar</A><BR>
<A HREF="#SetSkipSpeech">SetSkipSpeech</A><BR>
<A HREF="#SetSpeechStyle">SetSpeechStyle</A><BR>
<P>

<HR>
<A NAME="Display"></A>
<H3>Display</H3>
<PRE>
Display (string message, ...)
</PRE>
Displays a message to the screen. It will be displayed in the standard
message box, and centred in the middle of the screen.<P>
You can insert the value of variables into the message. For more information,
see the <A HREF="ags36.htm#StringFormats">string formatting</A> section.<P>
<FONT COLOR="#FF0000">Example:</FONT>
<PRE>
int my_counter;
Display ("The counter is currently set to %d.", my_counter);
</PRE>
will replace the '<TT>%d</TT>' with the value of the variable "my_counter".<P>
NOTE: Display is a blocking function - that is, control will not return
to the script until the player has removed the text window (by pressing a
key or clicking the mouse). While the window is displayed, all other
processing, like animations and interface display, are disabled. This is
usually used for responses to the player LOOKing at things.<P>
<I>See Also:</I> <A HREF="ags79.htm#DisplayAt">DisplayAt</A>, <A HREF="ags79.htm#DisplayMessage">DisplayMessage</A>,
<A HREF="ags49.htm#Character.Say">Character.Say</A>, <A HREF="ags79.htm#DisplayTopBar">DisplayTopBar</A>,
<A HREF="ags77.htm#String.Format">String.Format</A><P>


<HR>
<A NAME="DisplayAt"></A>
<H3>DisplayAt</H3>
<PRE>
DisplayAt(int x, int y, int width, string message, ...)

</PRE>
Identical to the "Display" function, only this allows you to define the
position and size of the window where the text is displayed. The X and Y
variables define the co-ordinates of the upper-left corner of the window.<P>
The WIDTH variable defines the maximum width of the window. The height is then
automatically calculated so that the message fits into the window.<P>
You can insert the value of variables into the message. For more information,
see the <A HREF="ags36.htm#StringFormats">string formatting</A> section.<P>
Note: This is a blocking call. See the "Display" help for more information.<P>
<FONT COLOR="#FF0000">Example:</FONT>
<PRE>
DisplayAt (50,50,100, "This is a message");
</PRE>
will display the message at coordinates 50,50 in a box 100 pixels wide.<P>
<I>See Also:</I> <A HREF="ags79.htm#Display">Display</A>, <A HREF="ags79.htm#DisplayAtY">DisplayAtY</A><P>

<HR>
<A NAME="DisplayAtY"></A>
<H3>DisplayAtY</H3>
<PRE>
DisplayAtY (int y, string message)
</PRE>
Similar to the Display function, except that this will display the message
box at the specified Y location on the screen. The Y defines the co-ordinate
of the top of the message box. The horizontal positioning will be
automatically calculated as usual.<P>
<FONT COLOR="#FF0000">Example:</FONT>
<PRE>
DisplayAt (50, "This is a message");
</PRE>
will display the message at y coordinate 50.<P>
<I>See Also:</I> <A HREF="ags79.htm#Display">Display</A>, <A HREF="ags79.htm#DisplayAt">DisplayAt</A><P>

<HR>
<A NAME="DisplayMessage"></A>
<H3>DisplayMessage</H3>
<PRE>
DisplayMessage (int message_number)
</PRE>
Identical to the Display function, but this uses a message text defined in
the AGS Editor rather than in the script. It will either use a message
from the current room, or a global message (if message_number &gt;= 500).<P>
<FONT COLOR="#FF0000">Example:</FONT>
<PRE>
DisplayMessage(220);
</PRE>
will display the message 220 of the Room message editor.<P>
<I>See Also:</I> <A HREF="ags79.htm#Display">Display</A>, <A HREF="ags79.htm#DisplayMessageAtY">DisplayMessageAtY</A><P>


<HR>
<A NAME="DisplayMessageAtY"></A>
<H3>DisplayMessageAtY</H3>
<PRE>
DisplayMessageAtY (int message_number, int yposition)
</PRE>
Identical to the DisplayMessage function, except that the text box
is positioned with its top at YPOSITION, the same way as DisplayAtY
works.<P>
This is useful if you have an important graphic in the middle of the screen that
the text box would normally cover up - with this function you can place the message
above or below it.<P>
<FONT COLOR="#FF0000">Example:</FONT>
<PRE>
DisplayMessageAtY(527, 200);
</PRE>
will display global message 527, in the lower half of the screen.<P>
<I>See Also:</I> <A HREF="ags79.htm#DisplayAtY">DisplayAtY</A>, <A HREF="ags79.htm#DisplayMessage">DisplayMessage</A><P>
<P>

<HR>
<A NAME="DisplayTopBar"></A>
<H3>DisplayTopBar</H3>
<PRE>
DisplayTopBar(int y, int text_color, int back_color, string titleText, string message, ...)
</PRE>
Displays a message in a text window, with a caption bar on top of it.<P>
This displays MESSAGE in a similar way to the normal Display command, but above the
text window a caption bar will be displayed with TITLETEXT in it. This method was
used in some early Sierra games to indicate who was talking by having their name in
the caption, and can be handy if you don't want to draw a talking view for a character.<P>
You can insert the value of variables into the message. For more information,
see the <A HREF="ags36.htm#StringFormats">string formatting</A> section.<P>
The Y parameter specifies the Y location on the screen where the message box will appear.
The default is 25.<P>
The TEXT_COLOR parameter specifies the text colour of the top bar, and the BACK_COLOR specifies
the background colour of the top bar.<P>
You can pass 0 for Y, TEXT_COLOR or BACK_COLOR - if you do, it will use the setting you used
last time.<P>
There are a couple of game variables available which can further customize the look of
the bar. You can change these before calling DisplayTopBar.<P>
<B>game.top_bar_bordercolor</B> sets the colour used for the bar's border (set to the same
colour as the backcolor if you don't want a border) <br> 
<B>game.top_bar_borderwidth</B> sets the width of the bar's border, in pixels (default 1) <br> 
<B>game.top_bar_font</B> sets the font to use for the top bar. The default is -1, which means
that the current Normal font is used. Set it to a specific number to use that font instead.<P>
<FONT COLOR="#FF0000">Example:</FONT>
<PRE>
DisplayTopBar(25, 8, 7, "Evil wizard", "Get out of my house and never return!");
</PRE>
will display "Get out of my house and never return!" in the message box, with the
caption bar reading "Evil wizard". The message box will have dark grey text on a light
gray background.<P>
<I>See Also:</I> <A HREF="ags79.htm#Display">Display</A>, <A HREF="ags79.htm#DisplayAt">DisplayAt</A><P>


<HR>
<A NAME="SetSkipSpeech"></A>
<H3>SetSkipSpeech</H3>
<PRE>
SetSkipSpeech (int new_mode)
</PRE>
Changes whether the player can skip speech text by clicking the mouse.
This option is initially set in a checkbox in the Main tab of the editor, but
this function allows you to change it at run-time.
The value of NEW_MODE means the following:
<PRE>
0  player can skip text by clicking mouse or pressing key
1  player can skip text by pressing key only, not by clicking mouse
2  player cannot skip text with mouse or keyboard
3  text does not time-out; player must click mouse or press key each time
4  player can skip text by clicking mouse only, not by pressing key
</PRE>
<FONT COLOR="#FF0000">Example:</FONT>
<PRE>
SetSkipSpeech(2);
</PRE>
will make the player unable to skip the text by pressing a mouse button or a key.<P>
<I>See Also:</I> <A HREF="ags56.htm#Game.IgnoreUserInputAfterTextTimeoutMs">Game.IgnoreUserInputAfterTextTimeoutMs</A>,
<A HREF="ags56.htm#Game.TextReadingSpeed">Game.TextReadingSpeed</A><P>


<HR>
<A NAME="SetSpeechStyle"></A>
<H3>SetSpeechStyle</H3>
<PRE>
SetSpeechStyle(SpeechStyle)
</PRE>
Changes the way in which speech text is displayed. This modifies the setting
originally set in the editor. SpeechStyle can be:
<PRE>
eSpeechLucasarts
  speech text over character's head
eSpeechSierra
  close-up portrait of character
eSpeechSierraWithBackground
  close-up portrait + background window for text
eSpeechFullScreen
  QFG4-style full screen dialog pictures
</PRE>
<FONT COLOR="#FF0000">Example:</FONT>
<PRE>
SetSpeechStyle(eSpeechSierra);
</PRE>
will change the speech style to a close up portrait of the character.<P>


</BODY></HTML>
