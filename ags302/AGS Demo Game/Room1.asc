//===================================================================
// *** AGS ROOM SCRIPT ***
//
// Project: Demo Quest 3
//          Source of Dreams
//
// Room:    Splash Screen 
//              
// Author:  Allan Menefe (Holister_Man)
//          Rick Jafrate (RickJ)    
//              
// Abstract
// This is a splash screen that is displayed when the game is first 
// loaded. It first fades to green, then fades to black, and then 
// automatically transitions to the Menu Screen.
//
// Revision History
// 05-Mar-15 RickJ,        update for AGS 2.7
// 04-Dec-01 Holister_Man, original version derrived from DQII
//
// Copyright (c) 2005, Chis Jones 
//-------------------------------------------------------------------


//===================================================================
// Constant Definitions 
//-------------------------------------------------------------------
#define LASTSPRITEPAL                    41


//===================================================================
// Static Variables
//-------------------------------------------------------------------
int Slot=LASTSPRITEPAL;
int State=200;
int Counter=0;                           // Pause before fade to green


//===================================================================
// Utility Functions
//-------------------------------------------------------------------


//===================================================================
// Application Functions
//-------------------------------------------------------------------
//===================================================================
	function FadeToBlack() {
// 
// This function manipulates the room's palette to create a "fade out"
// effect. The red and blue chanels of each palette slot are first 
// decremented to zero making the screen turm to a green tint.  The 
// green channel of each slot is then decremented making the screen
// turn black. When the scrren is totally black the function returns 
// false; it returns true otherwise.  
//-------------------------------------------------------------------
	char status=true;
   
	if (Counter==50) State = 0;
	else Counter++;

	// Fade to green
	if (State <= 64)  {
		while (Slot < 256)  {
			// Check that slot.r is not already zero, and whether 
         // the pause has happened yet.
			if (palette[Slot].r>0) palette[Slot].r--; 
			if (palette[Slot].b>0) palette[Slot].b--;
			Slot++;
		}
		Counter++;
		UpdatePalette();
		Slot = LASTSPRITEPAL;
		State++;
	}

	// Fade to black
	else if (State <= 128)  {
		while (Slot < 256)  {
			if (palette[Slot].g>0) palette[Slot].g--;
			Slot++;
		}
		UpdatePalette();
		Slot=LASTSPRITEPAL;
		State++;
	}

	// Fade is complete
	else if (State == 129)  {
		status=false;
	}
	return status;
}


//===================================================================
// AGS Event Handler Functions (i.e. function room_a())
//-------------------------------------------------------------------
#sectionstart room_b  // DO NOT EDIT OR REMOVE THIS LINE
function room_b() {
	// script for room: Player enters screen (before fadein)

   mouse.Mode = eModeWait;
	PlaySound(sndThunder01);              // lightning 

	// Turn GUI off
	gButtonbar.Visible = false;
}
#sectionend room_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart room_c  // DO NOT EDIT OR REMOVE THIS LINE
function room_c() {
	// script for room: Repeatedly execute
	if (FadeToBlack()==false) {
		SetScreenTransition(eTransitionDissolve);
		player.ChangeRoom(crmDemoQuest3Menu);
	}
}
#sectionend room_c  // DO NOT EDIT OR REMOVE THIS LINE