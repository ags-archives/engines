//===================================================================
// *** AGS ROOM SCRIPT ***
//
// Project: Demo Quest 3 
//          Source of Dreams
//
// Room:    Dar's Door
//              
// Author:  Rick Jafrate (RickJ)    
//          
// Abstract
// This room is a close-up of the entrance to Dar's.  The  purpose is 
// to provide a setting where a conversation with Pirate Bob may take
// place to gain entry into Dar's.
//
// Description
// Player  knocks on door (i.e. interacts with).  Footsteps are heard 
// and a panel in the  door slides open revealing the bouncer's face.
// Player then talks to the bouncer, Pirate Bob,to learn that partons 
// must present a valid Id card and must be male.  
// 
// The Id card is inside a bottle found in the EmptyStreet room.  The
// player  character  achieve maleness using the Gend-R-Matic machine
// in the alley bhind Dar's. The effect is only temporary and more or
// less wears off at midnight or sooner.
//
// Scipting Hint - Handling Events in the Room Script
// Events  that  normally handled in the global script can be handled
// in the Room Script  by using  the CallRoomScript() function in the
// Global Script and the on_call() function in the Room Script. These
// functions are in the  manual  under "CallRoomScript".  A parameter
// is  used  to  specify  a  numeric  event id. An enumerated type is
// defined in the Script Header whose values may be used as event ids.
// Using enumerated values in stead of numeric values makes it easier 
// to read and maintain the script.
// 
// Revision History
// 05-Apr-03 RickJ,        original version
// 
// Copyright (c) 2005 by Chris Jones
//-------------------------------------------------------------------


//===================================================================
// Constant Definitions
//-------------------------------------------------------------------
#define DOORPANEL_OPEN_TIME					200

//===================================================================
// Static Variable Definitions
//-------------------------------------------------------------------
int	DoorState;
int	BuildingState;
int	DoorPanelTimer;

//===================================================================
// Utility Functions
//-------------------------------------------------------------------


//===================================================================
// Application Functions
//-------------------------------------------------------------------
//===================================================================
   function DoorInit() {
// 
// Initializes the door to Dar's establishment. Initially the door is
// in the the CLOSED state.  
//-------------------------------------------------------------------
	DoorState = CLOSED;	// Set the new state
	oDoor.SetView(24,7);	// Set the graphic and animation loop
	DoorPanelTimer=0;		// Panel closes automatically when timer==0
	RemoveWalkableArea(2);
	cPiratebob.ChangeRoom(crmDarsDoor,165,73);
}

//===================================================================
   function DoorOpen() {
//-------------------------------------------------------------------
	if (DoorState!=OPENED) {
		DoorState = OPENED;
		PlaySound(sndDoorOpen01);
		oDoor.SetView(24,7,0);
		Wait(50);
		oDoor.Animate(7,3,eOnce,eBlock,eForwards);
		RestoreWalkableArea(2);
	}
}

//===================================================================
   function DoorClose() {
//-------------------------------------------------------------------
	if (DoorState!=CLOSED) {
		DoorState = CLOSED;
		oDoor.SetView(24,7,5);
		PlaySound(sndDoorClose01);
		Wait(1);
		oDoor.Animate(7,3,eOnce,eBlock,eBackwards);
		RemoveWalkableArea(2);
	}
}

//===================================================================
   function DoorClosePanel() {
//-------------------------------------------------------------------
	if (DoorState!=CLOSED) {
		DoorState = CLOSED;
		oDoor.SetView(24,5);
		PlaySound(sndTeeSwing01);
		oDoor.Animate(5,5,eOnce,eBlock,eBackwards);
	}	
	DoorPanelTimer = 0;
}

//===================================================================
   function DoorOpenPanel() {
//-------------------------------------------------------------------
	if (DoorState!=CONVERSE) {
		DoorState = CONVERSE;
		oDoor.SetView(24,5);
		PlaySound(sndTeeSwing01);
		Wait(1);
		oDoor.Animate(5,5,eOnce,eBlock,eForwards);	
	}
	DoorPanelTimer = DOORPANEL_OPEN_TIME;	
}


//===================================================================
   function ConverseWithPirateBob() {
//-------------------------------------------------------------------
	if (player==cCris) dFemaleBob.Start();		// Female conversation
	else dMaleBob.Start();							// Male conversation
}

//===================================================================
   function ShowIdToPirateBob() {
//-------------------------------------------------------------------
	if (player.ActiveInventory==iIdCard) {	// Player is carrying Id card
		if (player==cCris) {					// Player is female
			cPiratebob.Say("Whatda ye ave ere?");
			cPiratebob.Say("Aye! A valid Id card it be.");
			cPiratebob.Say("Sorry las. Them whats not a man ain't allowed to pass.");
			cPiratebob.Say("Come back looking like a man an ol Pirate Bob be opening the door for ye."); 
			DoorClosePanel();
		}
		else {										// Player is male
			cPiratebob.Say("Yer Id card, an valid it be.");
			cPiratebob.Say("Give ol Pirate Bob a minute to open the door.");
			DoorClosePanel();
			Wait(10);
			cPiratebob.ChangeRoom(NONE);
			DoorOpen();
		}
	}
	else if (player.ActiveInventory==iMoney) {	// Player is carrying money
		cPiratebob.Say("Ye ain't got enuf money to bribe ol Pirate Bob!");
		player.Say("Oh! Just my luck to get an honest pirate.");
		cPiratebob.Say("Who you be callin honest? Thems slander words they is!");
		cPiratebob.Say("Ah ain't honest an ah ain't cheap!");
		cPiratebob.Say("Like ah told ye, it ain't enuf money to bribe ol Pirate Bob!");
	}
	else {											// Player is not carrying Id
		cPiratebob.Say("Away with ye, ye under-age scum!");
		cPiratebob.Say("Ain't no bugger getin ere with no %s!",player.ActiveInventory.Name);
	}
}


//===================================================================
// Global - Interaction Handler Functions
//
// Events normally picked up in the Global Script can be processed in
// the Room Script by executing the CallRoomScript() function with an
// event number.  Event 4001, for  example, is  generated from dialog 
// topic #4.  In this dialog a "run-script 4001" command is  executed
// casing an the dialog_request() function to be called in the Global 
// Script. A value of 4001 is passed to this function as a parameter.
// The dialog_request() function then  executes  the CallRoomScript()
// function,  passing 4001 as the parameter. That cause the on_call()
// function below  to  be executed with the EVENT parameters having a
// value of 4001.  
//-------------------------------------------------------------------
function on_call(int event) {
	if (event==evtStartConversation) {
		ConverseWithPirateBob() ;
	}
	else if (event==evtOpenDoor) {
		ShowIdToPirateBob() ;
	}
	else if (event==evtEndConversation) {
		DoorClosePanel();				
	}
	else if (event==evtEndConversationAndWait) {
		DoorPanelTimer = 4*DOORPANEL_OPEN_TIME;		
	}
}


//===================================================================
// Room - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart room_a  // DO NOT EDIT OR REMOVE THIS LINE
function room_a() {
	// script for room: Player enters screen (before fadein)

	// Initialize help gui
	gHelpTitle.Text = "Dar's Door";
	gHelpDescription.Text = "Demonstarttion of conversations and use of CallRoomScript() to pass events from the Global Script to the RoomScript.";
	gHelpReference.Text = "Manual Reference:[CallRoomScript, Conversations, Object, Character";

	// Initialize Room
	DoorInit();
	
	// Initialize Player
	player.StopMoving();
	player.x = 150;
	player.y = 199;
	player.FaceLocation(STAGE_RIGHT);	// STAGE_RIGHT is defined in Script Header
}
#sectionend room_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart room_b  // DO NOT EDIT OR REMOVE THIS LINE
function room_b() {
	// script for room: Repeatedly execute
  
	// Close DoorPanel when timer expires
	if (DoorState==CONVERSE) {					// Only if panel is open
		if (DoorPanelTimer>0) DoorPanelTimer--;
		else if (DoorPanelTimer==0) DoorClosePanel();
		else {
			// Leave panel open
		}
	}
}
#sectionend room_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart room_c  // DO NOT EDIT OR REMOVE THIS LINE
function room_c() {
	// script for room: First time player enters screen
	BuildingState = NONE;
}
#sectionend room_c  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart region3_a  // DO NOT EDIT OR REMOVE THIS LINE
function region3_a() {
	// script for region3: Player walks onto region
	player.ChangeRoom(crmDarsStreet,165,119);
}
#sectionend region3_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart region4_a  // DO NOT EDIT OR REMOVE THIS LINE
function region4_a() {
	// script for region4: Player walks onto region
	player.ChangeRoom(crmDarsStreet,205,119);
}
#sectionend region4_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart region2_a  // DO NOT EDIT OR REMOVE THIS LINE
function region2_a() {
	// script for region2: Player walks onto region
	player.ChangeRoom(crmDarsInside,160,160);
}
#sectionend region2_a  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Door - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart object0_a  // DO NOT EDIT OR REMOVE THIS LINE
function object0_a() {
	// script for object0: Look at object (oDoor)
	Display("It's a large metal door.  There are many marks on the door, apparently from objects striking it.");
	Display("There are also notice some spots of blood on the door.");
}
#sectionend object0_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart object0_b  // DO NOT EDIT OR REMOVE THIS LINE
function object0_b() {
	// script for object0: Interact object 
	if (DoorState==CONVERSE) {
		DoorClosePanel();
	}	
	else if (DoorState==CLOSED) {
		player.Walk(150,199,eBlock,eAnywhere);
		player.FaceLocation(STAGE_RIGHT);		// STAGE_RIGHT is defined in Script Header
		PlaySound(sndKnock01);
		Wait(100);
		PlaySound(sndFootstepPorch01);
		Wait(180);
		DoorOpenPanel();
	}	
	else if (DoorState==OPENED) {
		DoorClose();
	}	
}
#sectionend object0_b  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Building - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart hotspot1_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot1_a() {
	// script for hotspot1: Look at hotspot (hPanel)
	Display("There's some kind of sliding panel in the door.");
}
#sectionend hotspot1_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot1_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot1_b() {
	// script for hotspot1: Interact hotspot (hPanel)
	Display("You reach up to touch the sliding panel but have second thoughts after noticing frops of blood.");
}
#sectionend hotspot1_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot4_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot4_a() {
	// script for hotspot4: Look at hotspot (hDoorFrame)
	Display("It's a stone door frame, not in much better shape than the rest of the building.");
}
#sectionend hotspot4_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot6_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot6_a() {
	// script for hotspot6: Look at hotspot (hSign)
	Display("Just above the door is a painted sign that reads \"Dars Girls\".");
}
#sectionend hotspot6_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot6_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot6_b() {
  // script for hotspot6: Interact hotspot (hSign)
	Display("You reach up to touch the sign but find you are several inches too short.");
}
#sectionend hotspot6_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot7_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot7_a() {
	// script for hotspot7: Look at hotspot (hBuilding)
	Display("It's a very old an run down building, a perfect location for an establishment like Dar's");
}
#sectionend hotspot7_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot7_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot7_b() {
	// script for hotspot7: Interact hotspot (hBuilding)
	if (BuildingState!=TOUCHED) {
		Display("You decide against touching it out of fear of damaging it's structural integrity.");
		BuildingState = TOUCHED;
	}
	else {
		player.ChangeRoom(player.PreviousRoom,185,116);
	}
}
#sectionend hotspot7_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot8_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot8_a() {
	// script for hotspot8: Look at hotspot (hBrokenFrame)
	Display("A chunck out of the door frame seems to be missing here.");
	Display("You wonder who or what could have done that kind of damage?");
	
	}
#sectionend hotspot8_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot8_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot8_b() {
  // script for hotspot8: Interact hotspot (hBrokenFrame)
  Display("You run your hand over the damaged area and dislodge a few gravel sized pieces of stone.");
  Display("Being the neat person you are, you instinctively pickup the stones you have just displodged.");
}
#sectionend hotspot8_b  // DO NOT EDIT OR REMOVE THIS LINE

