//===================================================================
// *** AGS ROOM SCRIPT ***
//
// Project: Demo Quest 3 
//          Source of Dreams
//
// Room:    Factory Media Wing
//              
// Author:  Unknown (Unknown)
//          Rick Jafrate (RickJ)    
//
// Abstract
// This  room was meant to illustrate AGS's video, sound, and musical
// abilities but was never completed.   As is, it's a good example of
// how to open and close doors.
//
// Description
// Walk up to each of the control panels and interact with them. This
// will cause the corresponding doors to alternatively open and close.
//
// Scripting Hint - Walkable Areas
// To  prevent the player character from walking through closed doors 
// there are seperate walkable areas for the portion of the room that
// lies behind  the doors.  When the door is closed the walkable area 
// behind the door is removed so that the player character can't walk
// there.  When the door is opened the  walkable area is restored and
// the player character is then able to walk into the area inside the
// door.
//
// Revision History
// 05-Mar-15 RickJ,        update for AGS 2.7
// yy-mmm-dd Unknown,      original version
// 
// Copyright (c) 2005 by Chris Jones
//-------------------------------------------------------------------


//===================================================================
// Constant Definitions
//-------------------------------------------------------------------


//===================================================================
// Static Variable Definitions
//-------------------------------------------------------------------
int 	LeftDoorIsOpen;
int 	CenterDoorIsOpen;
int 	RightDoorIsOpen;

//===================================================================
// Utility Functions
//-------------------------------------------------------------------


//===================================================================
// Application Functions
//-------------------------------------------------------------------


//===================================================================
// Room - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart room_a  // DO NOT EDIT OR REMOVE THIS LINE
function room_a() {
	// script for room: WALK OFF LEFT
	player.ChangeRoom(crmFactoryEntrance,295,158);
}
#sectionend room_a  // DO NOT EDIT OR REMOVE THIS LINE


#sectionstart room_b  // DO NOT EDIT OR REMOVE THIS LINE
function room_b() {
	// script for room: FIRST TIME ENTERS SCREEN

	// Intro dialog
	player.Say("Well, this area of the factory is obviously still functional, but what a dump!");
	player.Say("It's derelict and abandoned - which means it's just waiting to yield its secrets to me!");
	Display("The Media Wing is not yet complete. You can open the doors but cannot go through them.");

	// Initialize room state
	LeftDoorIsOpen = false;
	CenterDoorIsOpen = false;
	RightDoorIsOpen = false;
}
#sectionend room_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart room_c  // DO NOT EDIT OR REMOVE THIS LINE
function room_c() {
	// script for room: PLAYER ENTERS SCREEN
	if (!LeftDoorIsOpen) RemoveWalkableArea(2);
	if (!CenterDoorIsOpen) RemoveWalkableArea(3);
	if (!RightDoorIsOpen) RemoveWalkableArea(4);

	// Setup help gui
	gHelpTitle.Text = "Factory Media Wing";
	gHelpDescription.Text = "This room illustrates how to open and close doors. The \"Media\" portion is not complete";
	gHelpReference.Text = "Manual Reference:[Animate, RemoveWalkableArea, RestoreWalkableArea";

	// Setup object animation
	oLeftdoor.SetView(VOFACTORY,2);
	oCenterdoor.SetView(VOFACTORY,3);
	oRightdoor.SetView(VOFACTORY,4);
}
#sectionend room_c  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Left Door - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart object0_a  // DO NOT EDIT OR REMOVE THIS LINE
function object0_a() {
	// script for object0: INTERACT WITH OBJECT
	if (!LeftDoorIsOpen) player.Say("There's no way I can force open this door.");
}
#sectionend object0_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart object0_b  // DO NOT EDIT OR REMOVE THIS LINE
function object0_b() {
	// script for object0: LOOK AT OBJECT
	if (LeftDoorIsOpen)  player.Say("The black void beyond awaits.");
	else player.Say("It's a door.");
}
#sectionend object0_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot2_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot2_a() {
	// script for hotspot2: INTERACT WITH HOTSPOT (left control panel)

	// Walk to control panel
	player.Walk(17,155,eBlock);
	player.FaceLocation(STAGE_RIGHT);

	// Animate door opening or closing
	aOverHeadDoor.Play();
	if (LeftDoorIsOpen) {					// Close it!
		oLeftdoor.Animate(2,6,eOnce,eBlock,eBackwards);
		RemoveWalkableArea(2);
		LeftDoorIsOpen = false;
	}
	else {										// Open it!
		oLeftdoor.Animate(2,6,eOnce,eBlock,eForwards);
		RestoreWalkableArea(2);
		LeftDoorIsOpen = true;
	}
}
#sectionend hotspot2_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot2_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot2_b() {
	// script for hotspot2: LOOK AT HOTSPOT (left control panel)
	player.Say("It looks like a hand-scanning, door-access control panel.");  
}
#sectionend hotspot2_b  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Center Door - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart object1_a  // DO NOT EDIT OR REMOVE THIS LINE
function object1_a() {
	// script for object1: INTERACT WITH OBJECT
	if (!CenterDoorIsOpen) player.Say("There's no way I can force open this door.");
}
#sectionend object1_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart object1_b  // DO NOT EDIT OR REMOVE THIS LINE
function object1_b() {
	// script for object1: LOOK AT OBJECT
	if (CenterDoorIsOpen)  player.Say("The black void beyond awaits.");
	else player.Say("It's a door.");
}
#sectionend object1_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot4_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot4_a() {
	// script for hotspot4: INTERACT WITH HOTSPOT

	// Walk to control panel
	player.Walk(126,155,eBlock);
	player.FaceLocation(STAGE_RIGHT);

	// Animate door opening or closing
	aOverHeadDoor.Play();
	if (CenterDoorIsOpen) {					// Close it!
		oCenterdoor.Animate(3,6,eOnce,eBlock,eBackwards);
		RemoveWalkableArea(3);
		CenterDoorIsOpen = false;
	}
	else {										// Open it!
		oCenterdoor.Animate(3,6,eOnce,eBlock,eForwards);
		RestoreWalkableArea(3);
		CenterDoorIsOpen = true;
	}
}
#sectionend hotspot4_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot4_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot4_b() {
	// script for hotspot4: LOOK AT HOTSPOT
	player.Say("It looks like a hand-scanning, door-access control panel.");
}
#sectionend hotspot4_b  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Right Door - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart object2_a  // DO NOT EDIT OR REMOVE THIS LINE
function object2_a() {
	// script for object2: LOOK AT OBJECT
	if (RightDoorIsOpen)  player.Say("The black void beyond awaits.");
	else player.Say("It's a door.");
}
#sectionend object2_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart object2_b  // DO NOT EDIT OR REMOVE THIS LINE
function object2_b() {
	// script for object2: INTERACT WITH OBJECT
	if (!RightDoorIsOpen) player.Say("There's no way I can force open this door.");
}
#sectionend object2_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot6_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot6_b() {
	// script for hotspot6: INTERACT WITH HOTSPOT

	// Walk to control panel
	player.Walk(238,155,eBlock);
	player.FaceLocation(STAGE_RIGHT);

	// Animate door opening or closing
	aOverHeadDoor.Play();
	if (RightDoorIsOpen) {					// Close it!
		oRightdoor.Animate(4,6,eOnce,eBlock,eBackwards);
		RemoveWalkableArea(4);
		RightDoorIsOpen = false;
	}
	else {										// Open it!
		oRightdoor.Animate(4,6,eOnce,eBlock,eForwards);
		RestoreWalkableArea(4);
		RightDoorIsOpen = true;
	}
}
#sectionend hotspot6_b  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot6_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot6_a() {
	// script for hotspot6: LOOK AT HOTSPOT
	player.Say("It looks like a hand-scanning, door-access control panel.");
}
#sectionend hotspot6_a  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Lights - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart hotspot7_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot7_a() {
	// script for hotspot7: INTERACT WITH HOTSPOT (lights)
	player.Say("Not only are they unreachable, I've no need to reach them.");
}
#sectionend hotspot7_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot7_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot7_b() {
	// script for hotspot7: LOOK AT HOTSPOT (lights)
	player.Say("X-19 Chrome Cylindore Fluid model.");
	player.Say("It's really amazing those things haven't burst or lost their break charges yet.");
	player.Say("They're providing the faint illumination in this hallway.");
}
#sectionend hotspot7_b  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Wall - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart hotspot9_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot9_a() {
	// script for hotspot9: LOOK AT HOTSPOT (wall)
	player.Say("This place is pretty run-down.");
}
#sectionend hotspot9_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot9_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot9_b() {
	// script for hotspot9: INTERACT WITH HOTSPOT (wall)
	player.Say("There's nothing on the wall I want to touch or interact with.");  
}
#sectionend hotspot9_b  // DO NOT EDIT OR REMOVE THIS LINE


//===================================================================
// Floor - Interaction Handler Functions
//-------------------------------------------------------------------
#sectionstart hotspot8_a  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot8_a() {
	// script for hotspot8: LOOK AT HOTSPOT (floor)
	player.Say("This place is pretty run-down.");
}
#sectionend hotspot8_a  // DO NOT EDIT OR REMOVE THIS LINE

#sectionstart hotspot8_b  // DO NOT EDIT OR REMOVE THIS LINE
function hotspot8_b() {
	// script for hotspot8: INTERACT WITH HOTSPOT (floor)
	player.Say("There's nothing on the floor I want to touch or interact with.");  
}
#sectionend hotspot8_b  // DO NOT EDIT OR REMOVE THIS LINE
